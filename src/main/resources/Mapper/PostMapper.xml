<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.atguigu.springboot.dao.PostMapper">
  <resultMap id="BaseResultMap" type="com.atguigu.springboot.pojo.Post">
    <id column="pid" jdbcType="INTEGER" property="pid" />
    <result column="uid" jdbcType="INTEGER" property="uid" />
    <result column="releaseDate" jdbcType="DATE" property="releasedate" />
    <result column="likeCount" jdbcType="INTEGER" property="likecount" />
    <result column="commentCount" jdbcType="INTEGER" property="commentcount" />
    <result column="pageViews" jdbcType="INTEGER" property="pageviews" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.atguigu.springboot.pojo.PostWithBLOBs">
    <result column="title" jdbcType="LONGVARCHAR" property="title" />
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    pid, uid, releaseDate, likeCount, commentCount, pageViews
  </sql>
  <sql id="Blob_Column_List">
    title, content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.atguigu.springboot.pojo.PostExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from post
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.atguigu.springboot.pojo.PostExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from post
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from post
    where pid = #{pid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from post
    where pid = #{pid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.atguigu.springboot.pojo.PostExample">
    delete from post
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.atguigu.springboot.pojo.PostWithBLOBs">
    insert into post (pid, uid, releaseDate, 
      likeCount, commentCount, pageViews, 
      title, content)
    values (#{pid,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER}, #{releasedate,jdbcType=DATE}, 
      #{likecount,jdbcType=INTEGER}, #{commentcount,jdbcType=INTEGER}, #{pageviews,jdbcType=INTEGER}, 
      #{title,jdbcType=LONGVARCHAR}, #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.atguigu.springboot.pojo.PostWithBLOBs">
    insert into post
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="pid != null">
        pid,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="releasedate != null">
        releaseDate,
      </if>
      <if test="likecount != null">
        likeCount,
      </if>
      <if test="commentcount != null">
        commentCount,
      </if>
      <if test="pageviews != null">
        pageViews,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="pid != null">
        #{pid,jdbcType=INTEGER},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="releasedate != null">
        #{releasedate,jdbcType=DATE},
      </if>
      <if test="likecount != null">
        #{likecount,jdbcType=INTEGER},
      </if>
      <if test="commentcount != null">
        #{commentcount,jdbcType=INTEGER},
      </if>
      <if test="pageviews != null">
        #{pageviews,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=LONGVARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.atguigu.springboot.pojo.PostExample" resultType="java.lang.Long">
    select count(*) from post
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update post
    <set>
      <if test="record.pid != null">
        pid = #{record.pid,jdbcType=INTEGER},
      </if>
      <if test="record.uid != null">
        uid = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.releasedate != null">
        releaseDate = #{record.releasedate,jdbcType=DATE},
      </if>
      <if test="record.likecount != null">
        likeCount = #{record.likecount,jdbcType=INTEGER},
      </if>
      <if test="record.commentcount != null">
        commentCount = #{record.commentcount,jdbcType=INTEGER},
      </if>
      <if test="record.pageviews != null">
        pageViews = #{record.pageviews,jdbcType=INTEGER},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update post
    set pid = #{record.pid,jdbcType=INTEGER},
      uid = #{record.uid,jdbcType=INTEGER},
      releaseDate = #{record.releasedate,jdbcType=DATE},
      likeCount = #{record.likecount,jdbcType=INTEGER},
      commentCount = #{record.commentcount,jdbcType=INTEGER},
      pageViews = #{record.pageviews,jdbcType=INTEGER},
      title = #{record.title,jdbcType=LONGVARCHAR},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update post
    set pid = #{record.pid,jdbcType=INTEGER},
      uid = #{record.uid,jdbcType=INTEGER},
      releaseDate = #{record.releasedate,jdbcType=DATE},
      likeCount = #{record.likecount,jdbcType=INTEGER},
      commentCount = #{record.commentcount,jdbcType=INTEGER},
      pageViews = #{record.pageviews,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.atguigu.springboot.pojo.PostWithBLOBs">
    update post
    <set>
      <if test="uid != null">
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="releasedate != null">
        releaseDate = #{releasedate,jdbcType=DATE},
      </if>
      <if test="likecount != null">
        likeCount = #{likecount,jdbcType=INTEGER},
      </if>
      <if test="commentcount != null">
        commentCount = #{commentcount,jdbcType=INTEGER},
      </if>
      <if test="pageviews != null">
        pageViews = #{pageviews,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=LONGVARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where pid = #{pid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.atguigu.springboot.pojo.PostWithBLOBs">
    update post
    set uid = #{uid,jdbcType=INTEGER},
      releaseDate = #{releasedate,jdbcType=DATE},
      likeCount = #{likecount,jdbcType=INTEGER},
      commentCount = #{commentcount,jdbcType=INTEGER},
      pageViews = #{pageviews,jdbcType=INTEGER},
      title = #{title,jdbcType=LONGVARCHAR},
      content = #{content,jdbcType=LONGVARCHAR}
    where pid = #{pid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.atguigu.springboot.pojo.Post">
    update post
    set uid = #{uid,jdbcType=INTEGER},
      releaseDate = #{releasedate,jdbcType=DATE},
      likeCount = #{likecount,jdbcType=INTEGER},
      commentCount = #{commentcount,jdbcType=INTEGER},
      pageViews = #{pageviews,jdbcType=INTEGER}
    where pid = #{pid,jdbcType=INTEGER}
  </update>
</mapper>